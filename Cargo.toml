[package]
name = "sequential-storage"
version = "4.0.2"
edition = "2024"
license = "MIT OR Apache-2.0"
description = "A crate for storing data in flash with minimal erase cycles."
homepage = "https://github.com/tweedegolf/sequential-storage"
repository = "https://github.com/tweedegolf/sequential-storage"
readme = "README.md"
keywords = ["no_std", "embedded", "flash", "storage"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
embedded-storage-async = "0.4.1"
defmt = { version = "0.3", optional = true }
futures = { version = "0.3.30", features = ["executor"], optional = true }
approx = { version = "0.5.1", optional = true }
arrayvec = { version = "0.7.4", default-features = false, optional = true }
heapless = { version = "0.8.0", optional = true }

[dev-dependencies]
approx = "0.5.1"
futures = { version = "0.3.30", features = ["executor"] }
futures-test = "0.3.30"

[features]
defmt-03 = ["dep:defmt"]
std = []
# Enable the implementation of the map Key trait for ArrayVec and ArrayString
arrayvec = ["dep:arrayvec"]
alloc = []
heapless = ["dep:heapless"]
_test = ["dep:futures", "dep:approx", "std", "arrayvec", "alloc", "heapless"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing_repro)'] }
